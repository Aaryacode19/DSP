//7.WAP of Implementation of Double Ended Queue through One Dimentional Array

#include <stdio.h>
#define MAX 100

int deque[MAX];
int front = -1, rear = -1;

int isFull() {
    return (front == 0 && rear == MAX - 1) || (front == rear + 1);
}

int isEmpty() {
    return front == -1;
}

void insertFront(int value) {
    if (isFull()) {
        printf("Deque overflow! Cannot insert at front.\n");
        return;
    }
    front = (front == 0) ? MAX - 1 : front - 1;
    if (front == -1) front = 0;  // First insertion
    deque[front] = value;
    printf("%d inserted at front.\n", value);
}

void insertRear(int value) {
    if (isFull()) {
        printf("Deque overflow! Cannot insert at rear.\n");
        return;
    }
    rear = (rear == MAX - 1) ? 0 : rear + 1;
    if (rear == -1) rear = 0;  // First insertion
    deque[rear] = value;
    printf("%d inserted at rear.\n", value);
}

void deleteFront() {
    if (isEmpty()) {
        printf("Deque underflow! Queue is empty.\n");
        return;
    }
    printf("%d deleted from front.\n", deque[front]);
    front = (front == rear) ? -1 : (front == MAX - 1) ? 0 : front + 1;
}

void deleteRear() {
    if (isEmpty()) {
        printf("Deque underflow! Queue is empty.\n");
        return;
    }
    printf("%d deleted from rear.\n", deque[rear]);
    rear = (front == rear) ? -1 : (rear == 0) ? MAX - 1 : rear - 1;
}

void display() {
    if (isEmpty()) {
        printf("Deque is empty.\n");
        return;
    }
    printf("Deque elements: ");
    int i = front;
    while (i != rear) {
        printf("%d ", deque[i]);
        i = (i + 1) % MAX;
    }
    printf("%d\n", deque[rear]);  // Print rear element
}

int main() {
    int choice, value;
    do {
        printf("\nMenu:\n1. Insert at Front\n2. Insert at Rear\n3. Delete from Front\n4. Delete from Rear\n5. Display\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: printf("Enter value to insert at front: "); scanf("%d", &value); insertFront(value); break;
            case 2: printf("Enter value to insert at rear: "); scanf("%d", &value); insertRear(value); break;
            case 3: deleteFront(); break;
            case 4: deleteRear(); break;
            case 5: display(); break;
            case 6: printf("Exiting program.\n"); break;
            default: printf("Invalid choice.\n");
        }
    } while (choice != 6);

    return 0;
}