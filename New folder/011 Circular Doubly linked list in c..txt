//11.WAP of implementation of Circular Doubly linked list in c.

#include <stdio.h>
#include <stdlib.h>

// Define a node structure
struct Node {
    int data;
    struct Node* next;
    struct Node* prev;
};

// Function to insert a node at the end
void insertEnd(struct Node** head, int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = newNode->prev = newNode;

    if (*head == NULL) {
        *head = newNode;  // First node, head points to it
    } else {
        struct Node* last = *head;
        while (last->next != *head) last = last->next;
        last->next = newNode;
        newNode->prev = last;
        newNode->next = *head;
        (*head)->prev = newNode;  // Circular link
    }
}

// Function to display the list
void display(struct Node* head) {
    if (!head) return;
    struct Node* temp = head;
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("(head)\n");
}

int main() {
    struct Node* head = NULL;

    insertEnd(&head, 10);
    insertEnd(&head, 20);
    insertEnd(&head, 30);
    display(head);  // Output: 10 -> 20 -> 30 -> (head)

    return 0;
}
